[2025-02-23T17:21:21.838+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2025-02-23T17:21:21.847+0000] {taskinstance.py:2614} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: book_data_pipeline.audit_books_data manual__2025-02-23T17:20:45.630187+00:00 [queued]>
[2025-02-23T17:21:21.857+0000] {taskinstance.py:2614} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: book_data_pipeline.audit_books_data manual__2025-02-23T17:20:45.630187+00:00 [queued]>
[2025-02-23T17:21:21.857+0000] {taskinstance.py:2867} INFO - Starting attempt 1 of 2
[2025-02-23T17:21:21.870+0000] {taskinstance.py:2890} INFO - Executing <Task(SQLExecuteQueryOperator): audit_books_data> on 2025-02-23 17:20:45.630187+00:00
[2025-02-23T17:21:21.878+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=141) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2025-02-23T17:21:21.880+0000] {standard_task_runner.py:72} INFO - Started process 142 to run task
[2025-02-23T17:21:21.879+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'book_data_pipeline', 'audit_books_data', 'manual__2025-02-23T17:20:45.630187+00:00', '--job-id', '452', '--raw', '--subdir', 'DAGS_FOLDER/book_data_pipeline.py', '--cfg-path', '/tmp/tmp12m6djxh']
[2025-02-23T17:21:21.880+0000] {standard_task_runner.py:105} INFO - Job 452: Subtask audit_books_data
[2025-02-23T17:21:21.942+0000] {task_command.py:467} INFO - Running <TaskInstance: book_data_pipeline.audit_books_data manual__2025-02-23T17:20:45.630187+00:00 [running]> on host 9ed3502c11bd
[2025-02-23T17:21:22.236+0000] {taskinstance.py:3134} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='Taushique Jafri' AIRFLOW_CTX_DAG_ID='book_data_pipeline' AIRFLOW_CTX_TASK_ID='audit_books_data' AIRFLOW_CTX_EXECUTION_DATE='2025-02-23T17:20:45.630187+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-02-23T17:20:45.630187+00:00'
[2025-02-23T17:21:22.237+0000] {logging_mixin.py:190} INFO - Task instance is in running state
[2025-02-23T17:21:22.237+0000] {logging_mixin.py:190} INFO -  Previous state of the Task instance: queued
[2025-02-23T17:21:22.237+0000] {logging_mixin.py:190} INFO - Current task name:audit_books_data state:running start_date:2025-02-23 17:21:21.848138+00:00
[2025-02-23T17:21:22.237+0000] {logging_mixin.py:190} INFO - Dag name:book_data_pipeline and current dag run status:running
[2025-02-23T17:21:22.237+0000] {taskinstance.py:732} INFO - ::endgroup::
[2025-02-23T17:21:22.238+0000] {sql.py:295} INFO - Executing: 
            -- Create the books_audit table if it doesn't exist
            CREATE TABLE IF NOT EXISTS public.books_audit (
                ingestion_date DATE PRIMARY KEY,
                total_rows INT,
                missing_rank INT,
                missing_isbn13 INT,
                missing_isbn10 INT,
                missing_published_date INT,
                negative_weight INT,
                negative_number_of_pages INT,
                unique_ranks INT,
                duplicate_ranks INT,
                invalid_isbn13_length INT,
                invalid_isbn10_length INT,
                invalid_dates INT
            );

            -- Upsert the daily aggregated audit data
            WITH aggregated_data AS (
                SELECT 
                    DATE(ingested_at) AS ingestion_date,
                    COUNT(*) AS total_rows,
                    COUNT(*) FILTER (WHERE rank IS NULL) AS missing_rank,
                    COUNT(*) FILTER (WHERE primary_isbn13 IS NULL) AS missing_isbn13,
                    COUNT(*) FILTER (WHERE primary_isbn10 IS NULL) AS missing_isbn10,
                    COUNT(*) FILTER (WHERE list_published_date IS NULL) AS missing_published_date,
                    COUNT(*) FILTER (WHERE weight < 0) AS negative_weight,
                    COUNT(*) FILTER (WHERE number_of_pages < 0) AS negative_number_of_pages,
                    COUNT(DISTINCT rank) AS unique_ranks,
                    COUNT(rank) - COUNT(DISTINCT rank) AS duplicate_ranks,
                    COUNT(*) FILTER (WHERE LENGTH(primary_isbn13::TEXT) <> 13) AS invalid_isbn13_length,
                    COUNT(*) FILTER (WHERE LENGTH(primary_isbn10::TEXT) <> 10) AS invalid_isbn10_length,
                    COUNT(*) FILTER (WHERE list_published_date::TEXT !~ '^\d{4}-\d{2}-\d{2}$') AS invalid_dates
                FROM public.books
                GROUP BY ingestion_date
            )
            INSERT INTO public.books_audit (
                ingestion_date, total_rows, missing_rank, missing_isbn13, missing_isbn10,
                missing_published_date, negative_weight, negative_number_of_pages,
                unique_ranks, duplicate_ranks, invalid_isbn13_length, invalid_isbn10_length, invalid_dates
            )
            SELECT * FROM aggregated_data
            ON CONFLICT (ingestion_date) 
            DO UPDATE SET 
                total_rows = EXCLUDED.total_rows,
                missing_rank = EXCLUDED.missing_rank,
                missing_isbn13 = EXCLUDED.missing_isbn13,
                missing_isbn10 = EXCLUDED.missing_isbn10,
                missing_published_date = EXCLUDED.missing_published_date,
                negative_weight = EXCLUDED.negative_weight,
                negative_number_of_pages = EXCLUDED.negative_number_of_pages,
                unique_ranks = EXCLUDED.unique_ranks,
                duplicate_ranks = EXCLUDED.duplicate_ranks,
                invalid_isbn13_length = EXCLUDED.invalid_isbn13_length,
                invalid_isbn10_length = EXCLUDED.invalid_isbn10_length,
                invalid_dates = EXCLUDED.invalid_dates;
        
[2025-02-23T17:21:22.241+0000] {base.py:84} INFO - Retrieving connection 'postgres_default'
[2025-02-23T17:21:22.244+0000] {base.py:84} INFO - Retrieving connection 'postgres_default'
[2025-02-23T17:21:22.246+0000] {sql.py:511} INFO - Running statement: 
            -- Create the books_audit table if it doesn't exist
            CREATE TABLE IF NOT EXISTS public.books_audit (
                ingestion_date DATE PRIMARY KEY,
                total_rows INT,
                missing_rank INT,
                missing_isbn13 INT,
                missing_isbn10 INT,
                missing_published_date INT,
                negative_weight INT,
                negative_number_of_pages INT,
                unique_ranks INT,
                duplicate_ranks INT,
                invalid_isbn13_length INT,
                invalid_isbn10_length INT,
                invalid_dates INT
            );

            -- Upsert the daily aggregated audit data
            WITH aggregated_data AS (
                SELECT 
                    DATE(ingested_at) AS ingestion_date,
                    COUNT(*) AS total_rows,
                    COUNT(*) FILTER (WHERE rank IS NULL) AS missing_rank,
                    COUNT(*) FILTER (WHERE primary_isbn13 IS NULL) AS missing_isbn13,
                    COUNT(*) FILTER (WHERE primary_isbn10 IS NULL) AS missing_isbn10,
                    COUNT(*) FILTER (WHERE list_published_date IS NULL) AS missing_published_date,
                    COUNT(*) FILTER (WHERE weight < 0) AS negative_weight,
                    COUNT(*) FILTER (WHERE number_of_pages < 0) AS negative_number_of_pages,
                    COUNT(DISTINCT rank) AS unique_ranks,
                    COUNT(rank) - COUNT(DISTINCT rank) AS duplicate_ranks,
                    COUNT(*) FILTER (WHERE LENGTH(primary_isbn13::TEXT) <> 13) AS invalid_isbn13_length,
                    COUNT(*) FILTER (WHERE LENGTH(primary_isbn10::TEXT) <> 10) AS invalid_isbn10_length,
                    COUNT(*) FILTER (WHERE list_published_date::TEXT !~ '^\d{4}-\d{2}-\d{2}$') AS invalid_dates
                FROM public.books
                GROUP BY ingestion_date
            )
            INSERT INTO public.books_audit (
                ingestion_date, total_rows, missing_rank, missing_isbn13, missing_isbn10,
                missing_published_date, negative_weight, negative_number_of_pages,
                unique_ranks, duplicate_ranks, invalid_isbn13_length, invalid_isbn10_length, invalid_dates
            )
            SELECT * FROM aggregated_data
            ON CONFLICT (ingestion_date) 
            DO UPDATE SET 
                total_rows = EXCLUDED.total_rows,
                missing_rank = EXCLUDED.missing_rank,
                missing_isbn13 = EXCLUDED.missing_isbn13,
                missing_isbn10 = EXCLUDED.missing_isbn10,
                missing_published_date = EXCLUDED.missing_published_date,
                negative_weight = EXCLUDED.negative_weight,
                negative_number_of_pages = EXCLUDED.negative_number_of_pages,
                unique_ranks = EXCLUDED.unique_ranks,
                duplicate_ranks = EXCLUDED.duplicate_ranks,
                invalid_isbn13_length = EXCLUDED.invalid_isbn13_length,
                invalid_isbn10_length = EXCLUDED.invalid_isbn10_length,
                invalid_dates = EXCLUDED.invalid_dates;
        , parameters: None
[2025-02-23T17:21:22.253+0000] {sql.py:520} INFO - Rows affected: 1
[2025-02-23T17:21:22.254+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/providers/common/sql/hooks/sql.py:470: DeprecationWarning: Import of fetch_all_handler from the '***.providers.common.sql.hooks' module is deprecated and will
be removed in the future. Please import it from '***.providers.common.sql.hooks.handlers'.
  result = self._make_common_data_structure(handler(cur))

[2025-02-23T17:21:22.254+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/providers/common/sql/hooks/sql.py:471: DeprecationWarning: Import of return_single_query_results from the '***.providers.common.sql.hooks' module is deprecated and will
be removed in the future. Please import it from '***.providers.common.sql.hooks.handlers'.
  if return_single_query_results(sql, return_last, split_statements):

[2025-02-23T17:21:22.255+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/providers/common/sql/hooks/sql.py:486: DeprecationWarning: Import of return_single_query_results from the '***.providers.common.sql.hooks' module is deprecated and will
be removed in the future. Please import it from '***.providers.common.sql.hooks.handlers'.
  if return_single_query_results(sql, return_last, split_statements):

[2025-02-23T17:21:22.256+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/providers/common/sql/operators/sql.py:311: DeprecationWarning: Import of return_single_query_results from the '***.providers.common.sql.hooks' module is deprecated and will
be removed in the future. Please import it from '***.providers.common.sql.hooks.handlers'.
  if return_single_query_results(self.sql, self.return_last, self.split_statements):

[2025-02-23T17:21:22.260+0000] {taskinstance.py:341} INFO - ::group::Post task execution logs
[2025-02-23T17:21:22.260+0000] {taskinstance.py:353} INFO - Marking task as SUCCESS. dag_id=book_data_pipeline, task_id=audit_books_data, run_id=manual__2025-02-23T17:20:45.630187+00:00, execution_date=20250223T172045, start_date=20250223T172121, end_date=20250223T172122
[2025-02-23T17:21:22.275+0000] {logging_mixin.py:190} INFO - Task instance in success state
[2025-02-23T17:21:22.275+0000] {logging_mixin.py:190} INFO -  Previous state of the Task instance: running
[2025-02-23T17:21:22.276+0000] {logging_mixin.py:190} INFO - Dag name:book_data_pipeline queued_at:2025-02-23 17:20:45.666339+00:00
[2025-02-23T17:21:22.276+0000] {logging_mixin.py:190} INFO - Task hostname:9ed3502c11bd operator:SQLExecuteQueryOperator
[2025-02-23T17:21:22.311+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2025-02-23T17:21:22.333+0000] {taskinstance.py:3901} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-02-23T17:21:22.334+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
